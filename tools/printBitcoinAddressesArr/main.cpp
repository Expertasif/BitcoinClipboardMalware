#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>

void help()
{
    std::cout << "printBitcoinAddressesArr" << std::endl;
    std::cout << "Print C++-style array containing bitcoin addresses of a file. The array"
        " returned by the program must be pasted into the config.hpp file"  <<
        std::endl;
    std::cout << "Param: file containing bitcoin addresses"
        << std::endl;
}

bool isBitcoinAddress(const std::string& str)
{
    if(str.at(0) != '1' && str.at(0) != '3')
        return false;

    size_t strLength = str.length();
    if(strLength < 26 || strLength > 35)
        return false;

    bool isAlphaNumeric = find_if(str.cbegin(), str.cend(), [](char c)
    {
        return !(isalnum(c) || (c == ' '));
    }) == str.cend();

    return isAlphaNumeric;
}

std::string makeArray(const std::vector<std::string>& bitcoinAddresses)
{
    size_t bitcoinAddressesSize = bitcoinAddresses.size();
    std::string arrayStr = "std::array <std::string, " +
        std::to_string(bitcoinAddressesSize) + "> bitcoinAddresses { ";

    for(size_t i = 0; i < bitcoinAddressesSize; ++i)
    {
        arrayStr += (i == bitcoinAddressesSize - 1 ? "\"" + bitcoinAddresses
            .at(i) + "\"" : "\"" + bitcoinAddresses.at(i) + "\"" + ", ");
    }
    arrayStr += " };";
    return arrayStr;
}
int main(int argc, char * argv[])
{
    if(argc != 2)
    {
        help();
        return -1;
    }

    std::ifstream file(argv[1], std::ios::in);
    if(!file)
    {
        std::cerr << "[ERROR] Unable to open " << argv[1] << std::endl;
    }

    std::vector<std::string> bitcoinAddresses;
    std::string line;
    while(getline(file, line))
    {
        if(isBitcoinAddress(line))
            bitcoinAddresses.push_back(line);
        else
        {
            std::cerr << "[ERROR] " << line << " is NOT a bitcoin address" <<
                std::endl;
        }
    }

    std::cout << makeArray(bitcoinAddresses) << std::endl;
    return 0;
}
